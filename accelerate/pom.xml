<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.uncomplicate</groupId>
  <artifactId>accelerate</artifactId>
  <version>0.1.0-${javacpp.version}</version>
  <name>JavaCPP Presets for Apple Accelerate Framework</name>

  <properties>
    <javacpp.version>1.5.12-SNAPSHOT</javacpp.version>
    <javacpp.compiler.option>-O3</javacpp.compiler.option>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <javacpp.cppbuild.skip>true</javacpp.cppbuild.skip>
    <javacpp.parser.skip>false</javacpp.parser.skip>
    <javacpp.compiler.skip>false</javacpp.compiler.skip>
    <javacpp.moduleId>${project.artifactId}</javacpp.moduleId>
    <javacpp.packageName>${project.artifactId}</javacpp.packageName>
    <javacpp.platform.nativeOutputPath>uncomplicate/javacpp/${javacpp.packageName}/${javacpp.platform}${javacpp.platform.extension}</javacpp.platform.nativeOutputPath>
    <javacpp.platform.root></javacpp.platform.root>
    <javacpp.platform.compiler></javacpp.platform.compiler>
    <javacpp.platform.extension></javacpp.platform.extension>
    <javacpp.platform.properties>${javacpp.platform}</javacpp.platform.properties>
    <javacpp.platform.ios-arm>ios-arm${javacpp.platform.extension}</javacpp.platform.ios-arm>
    <javacpp.platform.ios-arm64>ios-arm64${javacpp.platform.extension}</javacpp.platform.ios-arm64>
    <javacpp.platform.ios-x86>ios-x86${javacpp.platform.extension}</javacpp.platform.ios-x86>
    <javacpp.platform.ios-x86_64>ios-x86_64${javacpp.platform.extension}</javacpp.platform.ios-x86_64>
    <javacpp.platform.linux-armhf>linux-armhf${javacpp.platform.extension}</javacpp.platform.linux-armhf>
    <javacpp.platform.linux-arm64>linux-arm64${javacpp.platform.extension}</javacpp.platform.linux-arm64>
    <javacpp.platform.linux-ppc64le>linux-ppc64le${javacpp.platform.extension}</javacpp.platform.linux-ppc64le>
    <javacpp.platform.linux-x86>linux-x86${javacpp.platform.extension}</javacpp.platform.linux-x86>
    <javacpp.platform.linux-x86_64>linux-x86_64${javacpp.platform.extension}</javacpp.platform.linux-x86_64>
    <javacpp.platform.macosx-arm64>macosx-arm64${javacpp.platform.extension}</javacpp.platform.macosx-arm64>
    <javacpp.platform.macosx-x86_64>macosx-x86_64${javacpp.platform.extension}</javacpp.platform.macosx-x86_64>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.bytedeco</groupId>
      <artifactId>javacpp</artifactId>
      <version>${javacpp.version}</version>
    </dependency>
  </dependencies>

  <build>
      <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>javacpp-parser</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>resources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.12.1</version>
          <configuration>
          	<release>9</release>
              <source>1.8</source>
              <target>1.8</target>
          </configuration>
          <executions>
          <execution>
            <id>default-compile</id>
          </execution>
          <execution>
            <id>javacpp-parser</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <includes>
                <include>uncomplicate/javacpp/${javacpp.packageName}/presets/*.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.bytedeco</groupId>
        <artifactId>javacpp</artifactId>
        <version>${javacpp.version}</version>
        <configuration>
            <properties>${javacpp.platform.properties}</properties>
            <propertyKeysAndValues>
              <property>
                <name>platform.root</name>
                <value>${javacpp.platform.root}</value>
              </property>
              <property>
                <name>platform.compiler</name>
                <value>${javacpp.platform.compiler}</value>
              </property>
              <property>
                <name>platform.extension</name>
                <value>${javacpp.platform.extension}</value>
              </property>
            </propertyKeysAndValues>
            <classPath>${project.build.outputDirectory}</classPath>
            <includePaths>
              <includePath>${basedir}/target/classes/uncomplicate/javacpp/${javacpp.packageName}/include/</includePath>
              <includePath>${basedir}/target/classes/uncomplicate/javacpp/accelerate/include/</includePath>
            </includePaths>
            <resourcePaths>
              <resourcePath>${basedir}/target/classes/uncomplicate/javacpp/${javacpp.packageName}/</resourcePath>
            </resourcePaths>
            <buildResources>
              <buildResource>/${javacpp.platform.library.path}/</buildResource>
              <buildResource>/uncomplicate/javacpp/${javacpp.platform}${javacpp.platform.extension}/</buildResource>
              <buildResource>/uncomplicate/javacpp/${javacpp.platform}/</buildResource>
            </buildResources>
            <includeResources>
              <includeResource>/${javacpp.platform.library.path}/include/</includeResource>
              <includeResource>/uncomplicate/javacpp/include/</includeResource>
              <includeResource>/uncomplicate/javacpp/${javacpp.platform}${javacpp.platform.extension}/include/</includeResource>
              <includeResource>/uncomplicate/javacpp/${javacpp.platform}/include/</includeResource>
            </includeResources>
            <linkResources>
              <linkResource>/${javacpp.platform.library.path}/</linkResource>
              <linkResource>/${javacpp.platform.library.path}/lib/</linkResource>
              <linkResource>/uncomplicate/javacpp/${javacpp.platform}${javacpp.platform.extension}/</linkResource>
              <linkResource>/uncomplicate/javacpp/${javacpp.platform}${javacpp.platform.extension}/lib/</linkResource>
              <linkResource>/uncomplicate/javacpp/${javacpp.platform}/</linkResource>
              <linkResource>/uncomplicate/javacpp/${javacpp.platform}/lib/</linkResource>
            </linkResources>
        </configuration>
        <executions>
            <execution>
              <id>javacpp-validate</id>
              <phase>validate</phase>
              <goals>
                <goal>build</goal>
              </goals>
              <configuration>
                <targetDirectories>
                  <targetDirectory>${project.basedir}/src/gen/java</targetDirectory>
                </targetDirectories>
              </configuration>
            </execution>
            <execution>
              <id>javacpp-parser</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>parse</goal>
              </goals>
              <configuration>
                <skip>${javacpp.parser.skip}</skip>
                <outputDirectory>${project.basedir}/src/gen/java</outputDirectory>
                <classOrPackageName>uncomplicate.javacpp.${javacpp.packageName}.presets.*</classOrPackageName>
              </configuration>
            </execution>
            <execution>
              <id>javacpp-compiler</id>
              <phase>process-classes</phase>
              <goals>
                <goal>build</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/native/${javacpp.platform.nativeOutputPath}</outputDirectory>
                <skip>${javacpp.compiler.skip}</skip>
                <classOrPackageName>uncomplicate.javacpp.${javacpp.packageName}.**</classOrPackageName>
                <copyLibs>true</copyLibs>
                <copyResources>true</copyResources>
                <configDirectory>${project.build.directory}/native/META-INF/native-image/${javacpp.platform}${javacpp.platform.extension}/</configDirectory>
              </configuration>
            </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>default-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <archive>
<!--                <manifest>                          -->
<!--                  <addClasspath>true</addClasspath> -->
<!--                </manifest>                         -->
                <manifestEntries>
                  <!-- <addClasspath/> is broken: http://jira.codehaus.org/browse/MJAR-61 -->
                  <Class-Path>javacpp.jar</Class-Path>
                  <Implementation-Title>${project.name}</Implementation-Title>
                  <Implementation-Vendor>Uncomplicate</Implementation-Vendor>
                  <Implementation-Version>${project.version}</Implementation-Version>
                  <Specification-Title>${project.name}</Specification-Title>
                  <Specification-Vendor>Uncomplicate</Specification-Vendor>
                  <Specification-Version>${project.version}</Specification-Version>
                  <Multi-Release>true</Multi-Release>
                </manifestEntries>
              </archive>
              <includes>
                <include>uncomplicate/javacpp/${javacpp.packageName}/**</include>
              </includes>
              <excludes>
                <exclude>uncomplicate/javacpp/${javacpp.packageName}/include/</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>javacpp-${javacpp.platform}${javacpp.platform.extension}</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classifier>${javacpp.platform}${javacpp.platform.extension}</classifier>
              <skipIfEmpty>true</skipIfEmpty>
              <includes>
                <!-- In case of successive builds for multiple platforms
                     without cleaning, ensures we only include files for
                     this platform. -->
                <!-- <include>uncomplicate/javacpp/${javacpp.packageName}/${javacpp.platform}${javacpp.platform.extension}</include> -->
                <include>${javacpp.platform.nativeOutputPath}/</include>
                <include>META-INF/native-image/${javacpp.platform}${javacpp.platform.extension}/</include>
              </includes>
              <archive>
                  <manifestEntries>
                      <Multi-Release>true</Multi-Release>
                  </manifestEntries>
              </archive>
              <classesDirectory>${project.build.directory}/native</classesDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.moditect</groupId>
        <artifactId>moditect-maven-plugin</artifactId>
        <version>1.1.0</version>
        <configuration>
          <jvmVersion>9</jvmVersion>
          <overwriteExistingFiles>true</overwriteExistingFiles>
          <outputDirectory>${project.build.directory}</outputDirectory>
        </configuration>
        <executions>
          <execution>
            <id>add-module-infos</id>
            <phase>package</phase>
            <goals>
              <goal>add-module-info</goal>
            </goals>
            <configuration>
              <modules>
                <module>
                  <file>${project.build.directory}/${project.artifactId}.jar</file>
                  <moduleInfoFile>${project.basedir}/src/main/java9/module-info.java</moduleInfoFile>
                </module>
                <module>
                  <file>${project.build.directory}/${project.artifactId}-${javacpp.platform}${javacpp.platform.extension}.jar</file>
                  <moduleInfoSource>
                    open module uncomplicate.javacpp.${javacpp.packageName}.${javacpp.platform.module} {
                      requires transitive uncomplicate.javacpp.${javacpp.packageName};
                    }
                  </moduleInfoSource>
                </module>
              </modules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <createChecksum>true</createChecksum>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>leave-disabled-to-not-generate-sources-twice-on-release</phase>
          </execution>
          <execution>
            <id>attach-source</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.basedir}/src/gen/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.13</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>sonatype-nexus-staging</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
<!--          <skipLocalStaging>true</skipLocalStaging> -->
          <skipStagingRepositoryClose>true</skipStagingRepositoryClose>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
